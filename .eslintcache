[{"C:\\Users\\web207\\assignment\\src\\index.js":"1","C:\\Users\\web207\\assignment\\src\\App.js":"2","C:\\Users\\web207\\assignment\\src\\reportWebVitals.js":"3","C:\\Users\\web207\\assignment\\src\\conponents\\Cart.js":"4","C:\\Users\\web207\\assignment\\src\\conponents\\Product.js":"5","C:\\Users\\web207\\assignment\\src\\conponents\\Style.js":"6","C:\\Users\\web207\\assignment\\src\\conponents\\EmptyCart.jsx":"7","C:\\Users\\web207\\assignment\\src\\conponents\\Footer.js":"8","C:\\Users\\web207\\assignment\\src\\conponents\\Login.js":"9","C:\\Users\\web207\\assignment\\src\\conponents\\ProductManageMent.js":"10","C:\\Users\\web207\\assignment\\src\\conponents\\OrderManagement.js":"11","C:\\Users\\web207\\assignment\\src\\customComponent\\CustomLogin.jsx":"12","C:\\Users\\web207\\assignment\\src\\customComponent\\CustomLogin1.jsx":"13","C:\\Users\\web207\\assignment\\src\\customComponent\\CustomTextField.jsx":"14","C:\\Users\\web207\\assignment\\src\\order\\CheckOut.jsx":"15","C:\\Users\\web207\\assignment\\src\\order\\AdressForm.jsx":"16","C:\\Users\\web207\\assignment\\src\\order\\PaymentForm.jsx":"17","C:\\Users\\web207\\assignment\\src\\order\\Review.jsx":"18"},{"size":500,"mtime":499162500000,"results":"19","hashOfConfig":"20"},{"size":8734,"mtime":1615433183127,"results":"21","hashOfConfig":"20"},{"size":362,"mtime":499162500000,"results":"22","hashOfConfig":"20"},{"size":6472,"mtime":1615432699451,"results":"23","hashOfConfig":"20"},{"size":7257,"mtime":1615180748445,"results":"24","hashOfConfig":"20"},{"size":1380,"mtime":1613995357125,"results":"25","hashOfConfig":"20"},{"size":399,"mtime":1614571256830,"results":"26","hashOfConfig":"20"},{"size":2324,"mtime":1615091796123,"results":"27","hashOfConfig":"20"},{"size":3656,"mtime":1615432658848,"results":"28","hashOfConfig":"20"},{"size":7617,"mtime":1615432783511,"results":"29","hashOfConfig":"20"},{"size":4969,"mtime":1614570981380,"results":"30","hashOfConfig":"20"},{"size":528,"mtime":1615432296816,"results":"31","hashOfConfig":"20"},{"size":506,"mtime":1615432296444,"results":"32","hashOfConfig":"20"},{"size":537,"mtime":1615432297043,"results":"33","hashOfConfig":"20"},{"size":2231,"mtime":1615433242521,"results":"34","hashOfConfig":"20"},{"size":1504,"mtime":1615432720762,"results":"35","hashOfConfig":"20"},{"size":1830,"mtime":1615433253863,"results":"36","hashOfConfig":"20"},{"size":1697,"mtime":1615432934418,"results":"37","hashOfConfig":"20"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},"1q0pajm",{"filePath":"41","messages":"42","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47","usedDeprecatedRules":"40"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"50","usedDeprecatedRules":"40"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57","usedDeprecatedRules":"40"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"62","usedDeprecatedRules":"40"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"65","usedDeprecatedRules":"40"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"68","usedDeprecatedRules":"40"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"71","usedDeprecatedRules":"40"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\web207\\assignment\\src\\index.js",[],["82","83"],"C:\\Users\\web207\\assignment\\src\\App.js",["84"],"C:\\Users\\web207\\assignment\\src\\reportWebVitals.js",[],"C:\\Users\\web207\\assignment\\src\\conponents\\Cart.js",["85","86","87"],"import { IconButton, Typography } from '@material-ui/core';\r\nimport Button from '@material-ui/core/Button';\r\nimport ButtonGroup from '@material-ui/core/ButtonGroup';\r\nimport Snackbar from '@material-ui/core/Snackbar';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport { DeleteForeverOutlined } from '@material-ui/icons';\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport RemoveIcon from '@material-ui/icons/Remove';\r\nimport MuiAlert from '@material-ui/lab/Alert';\r\nimport React, { useState } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport EmptyCart from './EmptyCart';\r\nfunction Cart({ cart, setCart, indexCart, setIndexCart }) {\r\n    const [alert, setAlert] = useState(false);\r\n    function Alert(props) {\r\n        return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\r\n    }\r\n    const totalPrice = cart.reduce((a, c) => a + c.price * c.qty, 0);\r\n    const listData = [];\r\n    let [data, setData] = useState(listData);\r\n    const removeItem = (value) => {\r\n        let oldItems = [...cart];\r\n        oldItems = oldItems.filter(cart => cart.id !== value.id);\r\n        setCart(oldItems);\r\n        setAlert(true);\r\n        setIndexCart(indexCart - 1);\r\n\r\n\r\n\r\n    }\r\n    const handleClose = () => {\r\n        setAlert(false);\r\n    };\r\n    const emptyCart = () => {\r\n        const conf = window.confirm('Are you sure?');\r\n        if(conf===true){\r\n            setCart([]);\r\n            setIndexCart(0);\r\n        }else{\r\n            return;\r\n        }\r\n       \r\n    }\r\n    const onReduce = (value) => {\r\n        const exist = cart.find((x) => x.id === value.id);\r\n        if (exist.qty === 1) {\r\n            setCart(cart.filter((x) => x.id !== value.id));\r\n            setIndexCart(indexCart - 1);\r\n            setAlert(true);\r\n        } else {\r\n            setCart(\r\n                cart.map((x) => x.id === value.id ? { ...exist, qty: exist.qty - 1 } : x)\r\n            );\r\n        }\r\n    }\r\n    const onIncrease = (value) => {\r\n        const exist = cart.find((x) => x.id === value.id);\r\n        if (exist) {\r\n            setCart(cart.map(x => x.id === value.id ? { ...exist, qty: exist.qty + 1 } : x));\r\n\r\n        } else {\r\n            setCart([...cart, { ...value, qty: 1 }]);\r\n\r\n        }\r\n    }\r\n    const FormCart=()=>(\r\n        <div style={{ padding: 50 }} >\r\n            <Table>\r\n                < TableHead>\r\n                    <TableRow >\r\n                        <TableCell>Name</TableCell>\r\n                        <TableCell></TableCell>\r\n                        <TableCell>Price</TableCell>\r\n                        <TableCell>Image</TableCell>\r\n                        <TableCell>Quantity</TableCell>\r\n                        <TableCell>Action</TableCell>\r\n                    </TableRow>\r\n                </TableHead>\r\n                <TableBody>\r\n                    { \r\n                        cart.map((value) => {\r\n                            return (\r\n                                <TableRow key={value.id} >\r\n                                    <TableCell>{value.name}\r\n                                        \r\n                                    </TableCell>\r\n                                    <TableCell><Typography display='inline' style={{ marginLeft: 40 }} color='secondary'> X {value.qty}</Typography></TableCell>\r\n                                    <TableCell style={{ fontWeight: 'bold', color: 'blueviolet' }}>{value.price * value.qty} $</TableCell>\r\n                                    <TableCell><div><img style={{ width: 100, height: 50 }} src={value.image} /></div></TableCell>\r\n                                    <TableCell>\r\n                                        <ButtonGroup>\r\n                                            <Button\r\n                                                aria-label=\"reduce\"\r\n                                                onClick={() => {\r\n                                                    onReduce(value)\r\n                                                }}\r\n                                            >\r\n                                                <RemoveIcon fontSize=\"small\" />\r\n                                            </Button>\r\n                                            <Button key={value.id}\r\n                                                aria-label=\"increase\"\r\n                                                onClick={() => onIncrease(value)\r\n\r\n                                                }\r\n                                            >\r\n                                                <AddIcon fontSize=\"small\" />\r\n                                            </Button>\r\n\r\n                                        </ButtonGroup>\r\n\r\n                                    </TableCell>\r\n                                    <TableCell> Remove\r\n                                    <IconButton onClick={() => { removeItem(value) }}>\r\n                                            <DeleteForeverOutlined />\r\n                                        </IconButton>\r\n                                    </TableCell>\r\n                                </TableRow>\r\n                            );\r\n                        })\r\n                    }\r\n\r\n\r\n                </TableBody>\r\n\r\n            </Table>\r\n            <Snackbar open={alert} autoHideDuration={6000} onClose={handleClose}>\r\n                <Alert onClose={handleClose} severity=\"success\">\r\n                    Removed from Cart!\r\n  </Alert>\r\n            </Snackbar>\r\n            <div marginTop='50'>\r\n                <Typography style={{ textAlign: 'center', fontWeight: 'bold', marginTop: 20 }} variant='h5' f color='secondary' >Total money: {totalPrice} $</Typography>\r\n                <div style={{ display:'flex',justifyContent:'space-between' }}>\r\n                    <Button style={{ marginRight: 20 }} onClick={() => { emptyCart() }} size='large' typpe='button' variant='contained' color='secondary'>Empty Cart</Button>\r\n                    <Button component={Link}  to='/Checkout'  size='large' typpe='button' variant='contained' color='primary'>Check Out</Button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n    const Form=()=>  cart.length === 0 ? <EmptyCart/> : <FormCart/>\r\n    return (\r\n        <Form/>\r\n\r\n    );\r\n   \r\n}\r\n\r\nexport default Cart","C:\\Users\\web207\\assignment\\src\\conponents\\Product.js",["88","89","90"],"import Avatar from '@material-ui/core/Avatar';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport CardHeader from '@material-ui/core/CardHeader';\r\nimport CardMedia from '@material-ui/core/CardMedia';\r\nimport { red } from '@material-ui/core/colors';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport Select from '@material-ui/core/Select';\r\nimport InputBase from '@material-ui/core/InputBase';\r\nimport SearchIcon from '@material-ui/icons/Search';\r\nimport Snackbar from '@material-ui/core/Snackbar';\r\nimport { fade,makeStyles } from '@material-ui/core/styles';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { AddShoppingCart } from '@material-ui/icons';\r\nimport LocalOfferIcon from '@material-ui/icons/LocalOffer';\r\nimport MuiAlert from '@material-ui/lab/Alert';\r\nimport React, { useState } from 'react';\r\n\r\nfunction Product({ product,setProduct, cart, setCart, indexCart, setIndexCart }) {\r\n  function Alert(props) {\r\n    return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\r\n  }\r\n\r\n  const [alert, setAlert] = useState(false);\r\n  const [er, setEr] = useState(false);\r\n  const [age, setAge] = useState('');\r\n  const [searchItem, setSearchItem] = useState('');\r\n\r\n  const handleChangeCbo = (event) => {\r\n      const sort=event.target.value;\r\n    setAge(sort);\r\n    if(sort==='lowest'){\r\n      setProduct(product.sort((a,b)=>a.price-b.price));\r\n    }else if(sort==='highest'){\r\n      setProduct(product.sort((a,b)=>b.price-a.price));\r\n    }\r\n    \r\n  };\r\n \r\n  const handleClose = () => {\r\n    setAlert(false);\r\n  };\r\n  const handleCloseEr = () => {\r\n    setEr(false);\r\n  };\r\n  const onClickedCart = (value) => {\r\n    const exist = cart.find((x) => x.id === value.id);\r\n    if (exist) {\r\n      setCart(cart.map(x => x.id === value.id ? { ...exist, qty: exist.qty + 1 } : x));\r\n      setAlert(true);\r\n    } else {\r\n      setCart([...cart, { ...value, qty: 1 }]);\r\n      setIndexCart(indexCart + 1);\r\n      setAlert(true);\r\n    }\r\n    \r\n  }\r\n  const useStyles = makeStyles((theme) => ({\r\n    root: {\r\n      width: 200,\r\n      height: 400,\r\n      padding: 10,\r\n      margin: 30,\r\n\r\n    },\r\n    media: {\r\n      height: 70,\r\n      width: 200,\r\n      paddingTop: '56.25%', // 16:9\r\n\r\n    },\r\n\r\n    avatar: {\r\n      backgroundColor: red[400],\r\n    },\r\n    search: {\r\n      position: 'relative',\r\n      borderRadius: theme.shape.borderRadius,\r\n      backgroundColor: '#e8f9fa',\r\n      '&:hover': {\r\n        backgroundColor: '#bdddde',\r\n      },\r\n      marginRight: theme.spacing(2),\r\n      marginLeft: 0,\r\n      width: '100%',\r\n      [theme.breakpoints.up('sm')]: {\r\n        marginLeft: theme.spacing(3),\r\n        width: '300px',\r\n       \r\n      },\r\n    },\r\n    searchIcon: {\r\n      padding: theme.spacing(0, 2),\r\n      height: '100%',\r\n      position: 'absolute',\r\n      pointerEvents: 'none',\r\n      display: 'flex',\r\n      alignItems: 'center',\r\n      justifyContent: 'center',\r\n    },\r\n    inputRoot: {\r\n      color: 'inherit',\r\n    },\r\n    inputInput: {\r\n      padding: theme.spacing(1, 1, 1, 0),\r\n      // vertical padding + font size from searchIcon\r\n      paddingLeft: `calc(1em + ${theme.spacing(4)}px)`,\r\n      transition: theme.transitions.create('width'),\r\n      width: '100%',\r\n      [theme.breakpoints.up('md')]: {\r\n        width: '20ch',\r\n      },\r\n    },\r\n  }));\r\n  const classes = useStyles();\r\n  const searchByName=()=>{\r\n    return(\r\n      <div className={classes.search}>\r\n      <div className={classes.searchIcon}>\r\n        <SearchIcon />\r\n      </div>\r\n      <InputBase onChange={event=>{setSearchItem(event.target.value)}}\r\n        placeholder=\"Search…\"\r\n        classes={{\r\n          root: classes.inputRoot,\r\n          input: classes.inputInput,\r\n        }}\r\n        inputProps={{ 'aria-label': 'search' }}\r\n      />\r\n    </div>\r\n    );\r\n  }\r\n  function sortByPrice(){\r\n    return(\r\n      \r\n      <FormControl variant=\"outlined\" style={{position:'-webkit-sticky', margin: 17, minWidth: 100}} >\r\n      <InputLabel id=\"demo-simple-select-outlined-label\">Price</InputLabel>\r\n      <Select\r\n        labelId=\"demo-simple-select-outlined-label\"\r\n        id=\"demo-simple-select-outlined\"\r\n        value={age}\r\n        onChange={handleChangeCbo}\r\n        label=\"Age\"\r\n      >\r\n        <MenuItem value='lowest'>lowest</MenuItem>\r\n        <MenuItem value='highest'>highest</MenuItem>\r\n      </Select>\r\n    </FormControl>\r\n      \r\n    );\r\n  }\r\n  function FormRow() {\r\n    return (\r\n      <React.Fragment >\r\n        {\r\n          product.filter((val)=>{\r\n            if(searchItem==''){\r\n              return val\r\n            }else if(val.name.toLowerCase().includes(searchItem.toLowerCase())){\r\n                return val\r\n            }\r\n          }).map((value) => {\r\n            return (\r\n              <Card key={value.id} className={classes.root}>\r\n                <CardHeader\r\n                  avatar={\r\n                    <Avatar className={classes.rounded}>\r\n                      <LocalOfferIcon color='secondary' />\r\n                    </Avatar>\r\n                  }\r\n                  style={{ color: 'red', fontWeight: 'bold' }}\r\n                  title={value.price + ' $'}\r\n                />\r\n                <CardMedia\r\n                  className={classes.media}\r\n                  image={value.image}\r\n                  title=\"Paella dish\"\r\n                >\r\n\r\n                </CardMedia>\r\n                <CardContent>\r\n                  <Typography style={{ maxWidth: 188, height: 20, textAlign: 'center', fontStyle: 'oblique' }}>{value.name}</Typography>\r\n                </CardContent>\r\n                <CardActions disableSpacing>\r\n                  <IconButton onClick={() => { onClickedCart(value) }} style={{ margin: 10 }} aria-label=\"add to cart\">\r\n                    <AddShoppingCart color=\"primary\" fontSize=\"large\" />\r\n                  </IconButton>\r\n\r\n                </CardActions>\r\n\r\n              </Card>\r\n            );\r\n          })\r\n        }\r\n        <Snackbar open={alert} autoHideDuration={6000} onClose={handleClose}>\r\n          <Alert onClose={handleClose} severity=\"success\">\r\n            Added to Cart!\r\n  </Alert>\r\n\r\n        </Snackbar>\r\n        <Snackbar open={er} autoHideDuration={6000} onClose={handleClose}>\r\n          <Alert onClose={handleCloseEr} severity='error'>\r\n            {`This product is already in Cart! \\n Please choose another product!`}\r\n          </Alert>\r\n        </Snackbar>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div style={{  marginTop: 50, marginLeft: 60 }}>\r\n     \r\n           \r\n          \r\n           <div style={{display:'flex'}}>\r\n           {sortByPrice()}\r\n             <div style={{margin:'25px 0px'}}>\r\n             {searchByName()}\r\n             </div>\r\n           </div>\r\n\r\n      <Grid maxWidth='sm' container spacing={2}>\r\n        <Grid container item xs={12} spacing={3}>\r\n          <FormRow />\r\n        </Grid>\r\n      </Grid>\r\n\r\n    </div>\r\n\r\n\r\n  );\r\n}\r\nexport default Product;","C:\\Users\\web207\\assignment\\src\\conponents\\Style.js",[],"C:\\Users\\web207\\assignment\\src\\conponents\\EmptyCart.jsx",[],"C:\\Users\\web207\\assignment\\src\\conponents\\Footer.js",["91","92","93","94"],"import React from 'react';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { emphasize, makeStyles } from '@material-ui/core/styles';\r\nimport Container from '@material-ui/core/Container';\r\nimport Link from '@material-ui/core/Link';\r\nimport { IconButton } from '@material-ui/core';\r\nimport FacebookIcon from '@material-ui/icons/Facebook';\r\n\r\nfunction Copyright() {\r\n  return (\r\n    <Typography variant=\"body2\" color=\"textSecondary\">\r\n      {'Copyright ©  ngabinh239@gmail.com  '}\r\n      <Link color=\"primary\" href=\"https://fb.com/Ngafko.lacaf\">\r\n        Contact me\r\n      </Link>{' '}\r\n      {new Date().getFullYear()}\r\n      {'.'}\r\n    </Typography>\r\n  );\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    marginTop:'50px',\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    minHeight: '40vh',\r\n    flexWrap:'wrap',\r\n    textAlign:'center',\r\n    backgroundColor: '#c3dee8',\r\n  },\r\n  main: {\r\n    marginTop: theme.spacing(3),\r\n    marginBottom: theme.spacing(2),\r\n    display:'flex',\r\n    flexDirection: 'column',\r\n    flexWrap:'wrap',\r\n  },\r\n  content:{\r\n    display:'flex',\r\n    flexDirection: 'column',\r\n    flexWrap:'wrap',\r\n  },\r\n  footer: {\r\n    textAlign:'center',\r\n    padding: theme.spacing(3, 2),\r\n    marginTop: 'auto',\r\n    backgroundColor:\r\n      theme.palette.type === 'light' ? theme.palette.grey[400] : theme.palette.grey[900],\r\n  },\r\n}));\r\n\r\nexport default function StickyFooter() {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <Container component=\"main\" className={classes.main} maxWidth='sm'>\r\n\r\n       <Typography variant=\"h4\" component=\"h1\" gutterBottom>\r\n          About Us\r\n        </Typography>\r\n        <Typography variant=\"subtitle1\" >\r\n          {'Pin a footer to the bottom of the viewport.'}\r\n          {'The footer will move as the main element of the page grows.'}\r\n        </Typography>\r\n        <Typography variant=\"body1\">Sticky footer placeholder.</Typography>\r\n  \r\n      </Container>\r\n      <footer className={classes.footer}>\r\n        <Container maxWidth='sm'>\r\n          {/* <Typography variant=\"body1\">My sticky footer can be found here.</Typography> */}\r\n          <Copyright />      \r\n        </Container>\r\n      </footer>\r\n    </div>\r\n  );\r\n}","C:\\Users\\web207\\assignment\\src\\conponents\\Login.js",[],"C:\\Users\\web207\\assignment\\src\\conponents\\ProductManageMent.js",["95","96","97","98"],"import { Button, IconButton, Table, TableBody, TableCell, TableHead, TableRow, TextField, Typography } from '@material-ui/core';\r\nimport AddCircleIcon from '@material-ui/icons/AddCircle';\r\nimport EditIcon from '@material-ui/icons/Edit';\r\nimport HighlightOffIcon from '@material-ui/icons/HighlightOff';\r\nimport axios from 'axios';\r\nimport React, { useState } from 'react';\r\nimport { FormProvider, useForm } from 'react-hook-form';\r\nimport FormInput from '../customComponent/CustomTextField';\r\n\r\nconst ProductManageMent = ({ product, setProduct }) => {\r\n\r\n    const methods = useForm();\r\n\r\n    const onClickEdit = (value) => {\r\n        const exist = product.find((x) => x.id === value.id);\r\n        if (exist) {\r\n            setProduct(\r\n                product.map((x) => x.id === value.id ? { ...exist, click: exist.click = true } : x)\r\n            );\r\n\r\n        }\r\n    }\r\n\r\n    const [previous, setPrevious] = useState({});\r\n    const [clicked, setClicked] = useState(false);\r\n    const onChangeHandler = (e, row) => {\r\n        if (!previous[row.id]) {\r\n            setPrevious(state => ({ ...state, [row.id]: row }));\r\n        }\r\n        const name = e.target.name;\r\n        const value = e.target.value;\r\n        const { id } = row;\r\n        const newRows = product.map(row => {\r\n            if (row.id === id) {\r\n                return { ...row, [name]: value };\r\n            }\r\n            return row;\r\n        });\r\n        setProduct(newRows);\r\n        const exist = product.find((x) => x.id === value.id);\r\n        if (exist) {\r\n            setProduct(\r\n                product.map((x) => x.id === value.id ? { ...exist, [name]: value } : x)\r\n            );\r\n        }\r\n    };\r\n    const onUpdateProduct = (value) => {\r\n\r\n        let urlUpdate = 'https://600e76d03bb1d100179df304.mockapi.io/products/' + value.id;\r\n        axios({\r\n            method: 'PUT',\r\n            url: urlUpdate,\r\n            data: {\r\n                name: value.name,\r\n                price: value.price,\r\n            },\r\n        }, [])\r\n            .then((response) => {\r\n                console.log(response);\r\n                const exist = product.find((x) => x.id === value.id);\r\n                if (exist) {\r\n                    setProduct(\r\n                        product.map((x) => x.id === value.id ? { ...exist, click: exist.click = false } : x)\r\n                    );\r\n\r\n                }\r\n            })\r\n            .catch((err) => {\r\n                console.log(err);\r\n            })\r\n\r\n    }\r\n    const onDelete = (value) => {\r\n        let url = 'https://600e76d03bb1d100179df304.mockapi.io/products/' + value.id;\r\n        return axios({\r\n            method: 'DELETE',\r\n            url: url,\r\n        })\r\n    }\r\n    const onSubmitHandler = (data) => {\r\n        console.log(data);\r\n        let urlCreate = 'https://600e76d03bb1d100179df304.mockapi.io/products/';\r\n        axios({\r\n            method: 'POST',\r\n            url: urlCreate,\r\n            data: {\r\n                name: data.name,\r\n                price: data.price,\r\n            }\r\n        }, [])\r\n            .then((response) => {\r\n                const { data } = response;\r\n                setProduct([...product, data]);\r\n                window.alert('Product was Added!');\r\n                setClicked(false);\r\n            })\r\n            .catch((err) => {\r\n                console.log(err);\r\n            })\r\n    }\r\n    const onClickDelete = (value) => {\r\n        const conf = window.confirm('Do you want to delete this product?');\r\n        if (conf === true) {\r\n            const result = onDelete(value);\r\n            result.then((response) => {\r\n                const newRows = product.filter((row) => {\r\n                    if (row.id === value.id) {\r\n                        return false;\r\n                    }\r\n                    return row;\r\n                });\r\n                setProduct(newRows);\r\n            })\r\n                .catch((err) => {\r\n                    console.log(err);\r\n                })\r\n        } else {\r\n            return;\r\n        }\r\n    }\r\n   \r\n    const onAddProduct = () => {\r\n        setClicked(true);\r\n    }\r\n    const onCancel = () => {\r\n        setClicked(false);\r\n    }\r\n    const formAddProduct = () => clicked === true ? (\r\n        <FormProvider {...methods}>\r\n            <form onSubmit={methods.handleSubmit((data) => onSubmitHandler({ ...data }))}>\r\n                <div style={{ display: 'flex' }}>\r\n                    <FormInput required name='name' label='Name*' />\r\n                    <FormInput required name='price' label='Price*' />\r\n\r\n\r\n\r\n                    <Button style={{ margin: '10px' }} type='submit' variant='outlined' >Submit</Button>\r\n                    <Button style={{ margin: '10px' }} variant='outlined' onClick={() => { onCancel() }}>\r\n                        Cancel\r\n         </Button>\r\n\r\n                </div>\r\n\r\n            </form>\r\n        </FormProvider>\r\n    ) : ''\r\n    return (\r\n        <div>\r\n            <div>\r\n                <Typography style={{ margin: '40px 0px', textAlign: 'center', fontWeight: 800 }} color='secondary' variant='h5'>Product Management</Typography>\r\n            </div>\r\n            <div style={{ display: 'flex' }}>\r\n                <IconButton style={{ margin: '10px 20px' }} onClick={() => { onAddProduct() }}>\r\n                    Add New    <AddCircleIcon />\r\n                </IconButton>\r\n\r\n                {formAddProduct()}\r\n            </div>\r\n            <Table>\r\n                <TableHead>\r\n                    <TableRow>\r\n                        <TableCell>Id</TableCell>\r\n                        <TableCell>Name</TableCell>\r\n                        <TableCell>Price</TableCell>\r\n                        <TableCell>Image</TableCell>\r\n                        <TableCell>Action</TableCell>\r\n                    </TableRow>\r\n                </TableHead>\r\n                <TableBody>\r\n                    {\r\n                        product.map((value) => {\r\n                            return (\r\n                                <TableRow key={value.id}>\r\n                                    <TableCell>{value.id}</TableCell>\r\n                                    <TableCell>{value.click == true ? <TextField onChange={e => onChangeHandler(e, value)} name='name' defaultValue={value.name} /> : value.name}</TableCell>\r\n                                    <TableCell>{value.click == true ? <TextField onChange={e => onChangeHandler(e, value)} name='price' defaultValue={value.price} /> : value.price}</TableCell>\r\n                                    <TableCell><div><img style={{ width: 100, height: 50 }} src={value.image} /></div></TableCell>\r\n                                    <TableCell>\r\n\r\n                                        <IconButton onClick={() => { onClickEdit(value) }}>\r\n                                            <EditIcon />\r\n                                        </IconButton>\r\n                                        <IconButton onClick={() => { onClickDelete(value) }}>\r\n                                            <HighlightOffIcon />\r\n                                        </IconButton>\r\n                                        {value.click == true ? <IconButton onClick={() => { onUpdateProduct(value) }}>\r\n                                            Save\r\n                                    </IconButton> : ''}\r\n                                    </TableCell>\r\n                                </TableRow>\r\n                            );\r\n                        })\r\n                    }\r\n                </TableBody>\r\n            </Table>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ProductManageMent\r\n","C:\\Users\\web207\\assignment\\src\\conponents\\OrderManagement.js",["99","100","101"],"import { Table, TableBody, TableHead, TableCell, TableRow, IconButton, Typography, TextField } from '@material-ui/core'\r\nimport React, { useState } from 'react'\r\nimport Switch from '@material-ui/core/Switch';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Collapse from '@material-ui/core/Collapse';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport CheckIcon from '@material-ui/icons/Check';\r\nimport axios from 'axios';\r\n\r\nconst OrderManagement = ({order,setOrder}) => {\r\n    const [checked, setChecked] = useState(false);\r\n    const handleChange = (value) => {\r\n        // setChecked((prev) => !prev);\r\n        const exist = order.find((x) => x.orderId === value);\r\n      if (exist) {\r\n          setOrder(\r\n              order.map((x) => x.orderId === value ? { ...exist, state: exist.state =false } : x)\r\n          );\r\n            // listItem(value);\r\n            console.log(exist.state);\r\n      }\r\n      };\r\n      const onClickCollapse=(value)=>{\r\n        const exist = order.find((x) => x.orderId === value);\r\n      if (exist) {\r\n          setOrder(\r\n              order.map((x) => x.orderId === value ? { ...exist, state: exist.state = true } : x)\r\n          );\r\n            listItem(value);\r\n            console.log(exist.state);\r\n      }\r\n      }\r\n    const listItem =(value)=>{\r\n      // console.log(value);\r\n     \r\n     return (\r\n            <div >\r\n              <FormControlLabel\r\n                control={<Switch checked={value.state} onClick={()=>{onClickCollapse(value.orderId)}} onChange={handleChange(value)} />}\r\n                label=\"Show\"\r\n              />\r\n              \r\n              <div >\r\n                <Collapse in={value.state}>\r\n                  <Paper elevation={4} >\r\n                    <Table >\r\n                      \r\n                      {order.map((item)=>{\r\n                        return(\r\n                          <TableRow key={item.orderId}>\r\n                            <TableCell>{item.customerName}</TableCell>\r\n                            </TableRow>\r\n                        );\r\n                      })}\r\n                    </Table>\r\n                  </Paper>\r\n                </Collapse>               \r\n              </div>\r\n            </div>\r\n          );\r\n    }\r\n    const onUpdateStatus=(value)=>{\r\n     const conf=window.confirm('Do you want to confirm this Order?');\r\n     if(conf===true){\r\n      const exist = order.find((x) => x.orderId === value.orderId);\r\n      if (exist) {\r\n          setOrder(\r\n              order.map((x) => x.orderId === value.orderId ? { ...exist, status: exist.status ='confirmed' } : x)\r\n          );\r\n    }\r\n    let url='https://600e76d03bb1d100179df304.mockapi.io/orderDetails/'+value.orderId;\r\n    axios({\r\n      method:'PUT',\r\n      url:url,\r\n      data:{\r\n        status:'confirmed'\r\n      },\r\n    },[])\r\n    window.alert('confirmed');\r\n     }else{\r\n       return;\r\n     }\r\n  }\r\n    return (\r\n        <div>\r\n            <Typography style={{margin:'20px 0px',textAlign:'center',fontWeight:800}} color='secondary' variant='h5'>Order Management</Typography>\r\n            <Table>\r\n                <TableHead>\r\n                    <TableRow>\r\n                    <TableCell>Order Id</TableCell>\r\n                    <TableCell>Created At</TableCell>\r\n                    <TableCell>Customer Name</TableCell>\r\n                    <TableCell>Address</TableCell>\r\n                    <TableCell>Phone</TableCell>\r\n                    <TableCell>Email</TableCell>\r\n                    <TableCell>ListItem</TableCell>\r\n                    <TableCell>Total</TableCell>\r\n                    <TableCell>Status</TableCell>\r\n                    </TableRow>\r\n                </TableHead>\r\n                <TableBody>\r\n                    {\r\n                        order.map((value)=>{\r\n                            return(\r\n                                <TableRow key={value.orderId}>\r\n                                    <TableCell>{value.orderId}</TableCell>\r\n                                <TableCell>{value.createdAt}</TableCell>               \r\n                                <TableCell>{value.customerName}</TableCell> \r\n                                <TableCell>{value.address}</TableCell>\r\n                                <TableCell>{value.phone}</TableCell>\r\n                                <TableCell>{value.email}</TableCell>\r\n                                <TableCell>{' '+value.listProduct }</TableCell>\r\n                                <TableCell>{value.totalOrder}</TableCell>\r\n                                <TableCell>{value.status==='not confirmed yet'? <div>{value.status}<IconButton onClick={()=>{onUpdateStatus(value)}}><CheckIcon/></IconButton></div>:value.status}</TableCell>\r\n                                </TableRow>\r\n                            );\r\n                        })\r\n                    }\r\n                </TableBody>\r\n            </Table>\r\n        </div>\r\n    )\r\n    \r\n}\r\n\r\nexport default OrderManagement\r\n","C:\\Users\\web207\\assignment\\src\\customComponent\\CustomLogin.jsx",["102"],"import React from 'react'\r\nimport {TextField,Grid} from '@material-ui/core';\r\nimport {useFormContext,Controller} from 'react-hook-form';\r\nconst FormPassword = ({name,label,required}) => {\r\n    const {control}=useFormContext();\r\n    return (\r\n       <>\r\n          <Controller  \r\n          as={TextField} \r\n          control={control}\r\n          fullWidth\r\n          name={name}\r\n          label={label}\r\n          required={required}\r\n         type='password'\r\n          />\r\n       </>   \r\n    )\r\n}\r\n\r\nexport default FormPassword","C:\\Users\\web207\\assignment\\src\\customComponent\\CustomLogin1.jsx",["103"],"import React from 'react'\r\nimport {TextField,Grid} from '@material-ui/core';\r\nimport {useFormContext,Controller} from 'react-hook-form';\r\nconst FormEmail = ({name,label,required}) => {\r\n    const {control}=useFormContext();\r\n    return (\r\n       <>\r\n          <Controller  \r\n          as={TextField} \r\n          control={control}\r\n          fullWidth\r\n          name={name}\r\n          label={label}\r\n          required={required}\r\n        \r\n          />\r\n       </>   \r\n    )\r\n}\r\n\r\nexport default FormEmail","C:\\Users\\web207\\assignment\\src\\customComponent\\CustomTextField.jsx",[],"C:\\Users\\web207\\assignment\\src\\order\\CheckOut.jsx",["104"],"C:\\Users\\web207\\assignment\\src\\order\\AdressForm.jsx",[],"C:\\Users\\web207\\assignment\\src\\order\\PaymentForm.jsx",[],"C:\\Users\\web207\\assignment\\src\\order\\Review.jsx",[],{"ruleId":"105","replacedBy":"106"},{"ruleId":"107","replacedBy":"108"},{"ruleId":"109","severity":1,"message":"110","line":30,"column":3,"nodeType":"111","messageId":"112","endLine":30,"endColumn":13},{"ruleId":"109","severity":1,"message":"113","line":24,"column":10,"nodeType":"111","messageId":"112","endLine":24,"endColumn":14},{"ruleId":"109","severity":1,"message":"114","line":24,"column":16,"nodeType":"111","messageId":"112","endLine":24,"endColumn":23},{"ruleId":"115","severity":1,"message":"116","line":93,"column":53,"nodeType":"117","endLine":93,"endColumn":113},{"ruleId":"109","severity":1,"message":"118","line":17,"column":10,"nodeType":"111","messageId":"112","endLine":17,"endColumn":14},{"ruleId":"119","severity":1,"message":"120","line":161,"column":31,"nodeType":"121","messageId":"122","endLine":161,"endColumn":33},{"ruleId":"123","severity":1,"message":"124","line":162,"column":26,"nodeType":"125","messageId":"126","endLine":162,"endColumn":28},{"ruleId":"109","severity":1,"message":"127","line":2,"column":8,"nodeType":"111","messageId":"112","endLine":2,"endColumn":19},{"ruleId":"109","severity":1,"message":"128","line":4,"column":10,"nodeType":"111","messageId":"112","endLine":4,"endColumn":19},{"ruleId":"109","severity":1,"message":"129","line":7,"column":10,"nodeType":"111","messageId":"112","endLine":7,"endColumn":20},{"ruleId":"109","severity":1,"message":"130","line":8,"column":8,"nodeType":"111","messageId":"112","endLine":8,"endColumn":20},{"ruleId":"123","severity":1,"message":"124","line":175,"column":61,"nodeType":"125","messageId":"126","endLine":175,"endColumn":63},{"ruleId":"123","severity":1,"message":"124","line":176,"column":61,"nodeType":"125","messageId":"126","endLine":176,"endColumn":63},{"ruleId":"115","severity":1,"message":"116","line":177,"column":53,"nodeType":"117","endLine":177,"endColumn":113},{"ruleId":"123","severity":1,"message":"124","line":186,"column":54,"nodeType":"125","messageId":"126","endLine":186,"endColumn":56},{"ruleId":"109","severity":1,"message":"131","line":1,"column":84,"nodeType":"111","messageId":"112","endLine":1,"endColumn":93},{"ruleId":"109","severity":1,"message":"132","line":11,"column":12,"nodeType":"111","messageId":"112","endLine":11,"endColumn":19},{"ruleId":"109","severity":1,"message":"133","line":11,"column":21,"nodeType":"111","messageId":"112","endLine":11,"endColumn":31},{"ruleId":"109","severity":1,"message":"134","line":2,"column":19,"nodeType":"111","messageId":"112","endLine":2,"endColumn":23},{"ruleId":"109","severity":1,"message":"134","line":2,"column":19,"nodeType":"111","messageId":"112","endLine":2,"endColumn":23},{"ruleId":"123","severity":1,"message":"124","line":46,"column":40,"nodeType":"125","messageId":"126","endLine":46,"endColumn":42},"no-native-reassign",["135"],"no-negated-in-lhs",["136"],"no-unused-vars","'useHistory' is defined but never used.","Identifier","unusedVar","'data' is assigned a value but never used.","'setData' is assigned a value but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'fade' is defined but never used.","array-callback-return","Array.prototype.filter() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'CssBaseline' is defined but never used.","'emphasize' is defined but never used.","'IconButton' is defined but never used.","'FacebookIcon' is defined but never used.","'TextField' is defined but never used.","'checked' is assigned a value but never used.","'setChecked' is assigned a value but never used.","'Grid' is defined but never used.","no-global-assign","no-unsafe-negation"]