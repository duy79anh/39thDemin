[{"C:\\Users\\web207\\assignment\\src\\index.js":"1","C:\\Users\\web207\\assignment\\src\\App.js":"2","C:\\Users\\web207\\assignment\\src\\reportWebVitals.js":"3","C:\\Users\\web207\\assignment\\src\\conponents\\Cart.js":"4","C:\\Users\\web207\\assignment\\src\\conponents\\Product.js":"5","C:\\Users\\web207\\assignment\\src\\conponents\\CheckOut.jsx":"6","C:\\Users\\web207\\assignment\\src\\conponents\\Style.js":"7","C:\\Users\\web207\\assignment\\src\\conponents\\AdressForm.jsx":"8","C:\\Users\\web207\\assignment\\src\\conponents\\PaymentForm.jsx":"9","C:\\Users\\web207\\assignment\\src\\CustomTextField.jsx":"10","C:\\Users\\web207\\assignment\\src\\conponents\\EmptyCart.jsx":"11","C:\\Users\\web207\\assignment\\src\\conponents\\Review.jsx":"12","C:\\Users\\web207\\assignment\\src\\conponents\\Footer.js":"13","C:\\Users\\web207\\assignment\\src\\conponents\\Login.js":"14","C:\\Users\\web207\\assignment\\src\\CustomLogin.jsx":"15","C:\\Users\\web207\\assignment\\src\\conponents\\CustomLogin1.jsx":"16","C:\\Users\\web207\\assignment\\src\\conponents\\ProductManageMent.js":"17","C:\\Users\\web207\\assignment\\src\\conponents\\OrderManagement.js":"18"},{"size":500,"mtime":499162500000,"results":"19","hashOfConfig":"20"},{"size":8936,"mtime":1614567071764,"results":"21","hashOfConfig":"20"},{"size":362,"mtime":499162500000,"results":"22","hashOfConfig":"20"},{"size":6264,"mtime":1614055941334,"results":"23","hashOfConfig":"20"},{"size":4541,"mtime":1614156488107,"results":"24","hashOfConfig":"20"},{"size":2210,"mtime":1614056622119,"results":"25","hashOfConfig":"20"},{"size":1380,"mtime":1613995357125,"results":"26","hashOfConfig":"20"},{"size":1648,"mtime":1614316575720,"results":"27","hashOfConfig":"20"},{"size":1786,"mtime":1614570117046,"results":"28","hashOfConfig":"20"},{"size":537,"mtime":1614090521746,"results":"29","hashOfConfig":"20"},{"size":399,"mtime":1614571256830,"results":"30","hashOfConfig":"20"},{"size":1697,"mtime":1614054110652,"results":"31","hashOfConfig":"20"},{"size":2324,"mtime":1614569532519,"results":"32","hashOfConfig":"20"},{"size":3736,"mtime":1614571402970,"results":"33","hashOfConfig":"20"},{"size":528,"mtime":1614090558068,"results":"34","hashOfConfig":"20"},{"size":506,"mtime":1614090587548,"results":"35","hashOfConfig":"20"},{"size":7382,"mtime":1614324916337,"results":"36","hashOfConfig":"20"},{"size":4969,"mtime":1614570981380,"results":"37","hashOfConfig":"20"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},"1q0pajm",{"filePath":"41","messages":"42","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47","usedDeprecatedRules":"40"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"50","usedDeprecatedRules":"40"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53","usedDeprecatedRules":"40"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"58","usedDeprecatedRules":"40"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"69","messages":"70","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"71","messages":"72","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"73","usedDeprecatedRules":"40"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"76","usedDeprecatedRules":"40"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"79","usedDeprecatedRules":"40"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\web207\\assignment\\src\\index.js",[],["82","83"],"C:\\Users\\web207\\assignment\\src\\App.js",["84","85","86","87","88","89","90","91"],"C:\\Users\\web207\\assignment\\src\\reportWebVitals.js",[],"C:\\Users\\web207\\assignment\\src\\conponents\\Cart.js",["92","93","94","95","96","97","98","99"],"import TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Table from '@material-ui/core/Table';\r\nimport React, { useEffect, useState, useReducer } from 'react';\r\nimport { Link, useHistory } from 'react-router-dom';\r\nimport { Card, IconButton, Typography } from '@material-ui/core';\r\nimport { DeleteForeverOutlined, Email } from '@material-ui/icons';\r\nimport Snackbar from '@material-ui/core/Snackbar';\r\nimport MuiAlert from '@material-ui/lab/Alert';\r\nimport ButtonGroup from '@material-ui/core/ButtonGroup';\r\nimport Button from '@material-ui/core/Button';\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport RemoveIcon from '@material-ui/icons/Remove';\r\nimport EmptyCart from './EmptyCart';\r\nfunction Cart({ cart, setCart, indexCart, setIndexCart }) {\r\n    const [alert, setAlert] = useState(false);\r\n    function Alert(props) {\r\n        return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\r\n    }\r\n    const totalPrice = cart.reduce((a, c) => a + c.price * c.qty, 0);\r\n    const listData = [];\r\n    let [data, setData] = useState(listData);\r\n    const removeItem = (value) => {\r\n        let oldItems = [...cart];\r\n        oldItems = oldItems.filter(cart => cart.id !== value.id);\r\n        setCart(oldItems);\r\n        setAlert(true);\r\n        setIndexCart(indexCart - 1);\r\n\r\n\r\n\r\n    }\r\n    const handleClose = () => {\r\n        setAlert(false);\r\n    };\r\n    const emptyCart = () => {\r\n        setCart([]);\r\n        setIndexCart(0);\r\n    }\r\n    const onReduce = (value) => {\r\n        const exist = cart.find((x) => x.id === value.id);\r\n        if (exist.qty === 1) {\r\n            setCart(cart.filter((x) => x.id !== value.id));\r\n            setIndexCart(indexCart - 1);\r\n            setAlert(true);\r\n        } else {\r\n            setCart(\r\n                cart.map((x) => x.id === value.id ? { ...exist, qty: exist.qty - 1 } : x)\r\n            );\r\n        }\r\n    }\r\n    const onIncrease = (value) => {\r\n        const exist = cart.find((x) => x.id === value.id);\r\n        if (exist) {\r\n            setCart(cart.map(x => x.id === value.id ? { ...exist, qty: exist.qty + 1 } : x));\r\n\r\n        } else {\r\n            setCart([...cart, { ...value, qty: 1 }]);\r\n\r\n        }\r\n    }\r\n    const FormCart=()=>(\r\n        <div style={{ padding: 50 }} >\r\n            <Table>\r\n                < TableHead>\r\n                    <TableRow >\r\n                        <TableCell>Name</TableCell>\r\n                        <TableCell>Price</TableCell>\r\n                        <TableCell>Image</TableCell>\r\n                        <TableCell>Quantity</TableCell>\r\n                        <TableCell>Action</TableCell>\r\n                    </TableRow>\r\n                </TableHead>\r\n                <TableBody>\r\n                    { \r\n                        cart.map((value) => {\r\n                            return (\r\n                                <TableRow key={value.id} >\r\n                                    <TableCell>{value.name}\r\n                                        <Typography display='inline' style={{ marginLeft: 40 }} color='secondary'> X {value.qty}</Typography>\r\n                                    </TableCell>\r\n                                    <TableCell style={{ fontWeight: 'bold', color: 'blueviolet' }}>{value.price * value.qty} $</TableCell>\r\n                                    <TableCell><div><img style={{ width: 100, height: 50 }} src={value.image} /></div></TableCell>\r\n                                    <TableCell>\r\n                                        <ButtonGroup>\r\n                                            <Button\r\n                                                aria-label=\"reduce\"\r\n                                                onClick={() => {\r\n                                                    onReduce(value)\r\n                                                }}\r\n                                            >\r\n                                                <RemoveIcon fontSize=\"small\" />\r\n                                            </Button>\r\n                                            <Button key={value.id}\r\n                                                aria-label=\"increase\"\r\n                                                onClick={() => onIncrease(value)\r\n\r\n                                                }\r\n                                            >\r\n                                                <AddIcon fontSize=\"small\" />\r\n                                            </Button>\r\n\r\n                                        </ButtonGroup>\r\n\r\n                                    </TableCell>\r\n                                    <TableCell> Remove\r\n                                    <IconButton onClick={() => { removeItem(value) }}>\r\n                                            <DeleteForeverOutlined />\r\n                                        </IconButton>\r\n                                    </TableCell>\r\n                                </TableRow>\r\n                            );\r\n                        })\r\n                    }\r\n\r\n\r\n                </TableBody>\r\n\r\n            </Table>\r\n            <Snackbar open={alert} autoHideDuration={6000} onClose={handleClose}>\r\n                <Alert onClose={handleClose} severity=\"success\">\r\n                    Removed from Cart!\r\n  </Alert>\r\n            </Snackbar>\r\n            <div marginTop='50'>\r\n                <Typography style={{ textAlign: 'center', fontWeight: 'bold', marginTop: 20 }} variant='h5' f color='secondary' >Total money: {totalPrice} $</Typography>\r\n                <div style={{ display:'flex',justifyContent:'space-between' }}>\r\n                    <Button style={{ marginRight: 20 }} onClick={() => { emptyCart() }} size='large' typpe='button' variant='contained' color='secondary'>Empty Cart</Button>\r\n                    <Button component={Link}  to='/Checkout'  size='large' typpe='button' variant='contained' color='primary'>Check Out</Button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n    const Form=()=>  cart.length === 0 ? <EmptyCart/> : <FormCart/>\r\n    return (\r\n        <Form/>\r\n\r\n    );\r\n   \r\n}\r\n\r\nexport default Cart","C:\\Users\\web207\\assignment\\src\\conponents\\Product.js",["100","101","102","103"],"import Image from '@material-ui/icons/Image';\r\nimport CardMedia from '@material-ui/core/CardMedia';\r\nimport React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardHeader from '@material-ui/core/CardHeader';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { red } from '@material-ui/core/colors';\r\nimport { AddShoppingCart } from '@material-ui/icons';\r\nimport Snackbar from '@material-ui/core/Snackbar';\r\nimport MuiAlert from '@material-ui/lab/Alert';\r\nimport LocalOfferIcon from '@material-ui/icons/LocalOffer';\r\nfunction Product({ product,setProduct, cart, setCart, indexCart, setIndexCart }) {\r\n  function Alert(props) {\r\n    return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\r\n  }\r\n\r\n  const [alert, setAlert] = useState(false);\r\n  const [er, setEr] = useState(false);\r\n  //    const axios=require('axios');\r\n  //    axios.get('https://600e76d03bb1d100179df304.mockapi.io/products/9')\r\n  //         .then(  (response)=>{\r\n  //             console.log(response);           \r\n  //             setImage(response.data);\r\n  //         },[])\r\n \r\n  const handleClose = () => {\r\n    setAlert(false);\r\n  };\r\n  const handleCloseEr = () => {\r\n    setEr(false);\r\n  };\r\n  const onClickedCart = (value) => {\r\n    const exist = cart.find((x) => x.id === value.id);\r\n    if (exist) {\r\n      setCart(cart.map(x => x.id === value.id ? { ...exist, qty: exist.qty + 1 } : x));\r\n      setAlert(true);\r\n    } else {\r\n      setCart([...cart, { ...value, qty: 1 }]);\r\n      setIndexCart(indexCart + 1);\r\n      setAlert(true);\r\n    }\r\n    // setCart([...cart,{...value,qty:1}]);\r\n    // console.log(cart);\r\n    // setAlert(true);\r\n    \r\n  }\r\n  const useStyles = makeStyles((theme) => ({\r\n    root: {\r\n      width: 200,\r\n      height: 400,\r\n      padding: 10,\r\n      margin: 30,\r\n\r\n    },\r\n    media: {\r\n      height: 70,\r\n      width: 200,\r\n      paddingTop: '56.25%', // 16:9\r\n\r\n    },\r\n\r\n    avatar: {\r\n      backgroundColor: red[400],\r\n    },\r\n  }));\r\n  const classes = useStyles();\r\n  function FormRow() {\r\n    return (\r\n      <React.Fragment >\r\n\r\n        {\r\n          product.map((value) => {\r\n            return (\r\n              <Card key={value.id} className={classes.root}>\r\n                <CardHeader\r\n                  avatar={\r\n                    <Avatar className={classes.rounded}>\r\n                      <LocalOfferIcon color='secondary' />\r\n                    </Avatar>\r\n                  }\r\n                  style={{ color: 'red', fontWeight: 'bold' }}\r\n                  title={value.price + ' $'}\r\n                />\r\n                <CardMedia\r\n                  className={classes.media}\r\n                  image={value.image}\r\n                  title=\"Paella dish\"\r\n                >\r\n\r\n                </CardMedia>\r\n                <CardContent>\r\n                  <Typography style={{ maxWidth: 188, height: 20, textAlign: 'center', fontStyle: 'oblique' }}>{value.name}</Typography>\r\n                </CardContent>\r\n                <CardActions disableSpacing>\r\n                  <IconButton onClick={() => { onClickedCart(value) }} style={{ margin: 10 }} aria-label=\"add to cart\">\r\n                    <AddShoppingCart color=\"primary\" fontSize=\"large\" />\r\n                  </IconButton>\r\n\r\n                </CardActions>\r\n\r\n              </Card>\r\n            );\r\n          })\r\n        }\r\n        <Snackbar open={alert} autoHideDuration={6000} onClose={handleClose}>\r\n          <Alert onClose={handleClose} severity=\"success\">\r\n            Added to Cart!\r\n  </Alert>\r\n\r\n        </Snackbar>\r\n        <Snackbar open={er} autoHideDuration={6000} onClose={handleClose}>\r\n          <Alert onClose={handleCloseEr} severity='error'>\r\n            {`This product is already in Cart! \\n Please choose another product!`}\r\n          </Alert>\r\n        </Snackbar>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div style={{ marginTop: 50, marginLeft: 60 }}>\r\n\r\n\r\n      <Grid maxWidth='sm' container spacing={2}>\r\n        <Grid container item xs={12} spacing={3}>\r\n          <FormRow />\r\n        </Grid>\r\n      </Grid>\r\n\r\n    </div>\r\n\r\n\r\n  );\r\n}\r\nexport default Product;","C:\\Users\\web207\\assignment\\src\\conponents\\CheckOut.jsx",["104","105","106","107","108"],"import React, { useState ,useEffect} from 'react'\r\nimport { Paper, Stepper, Step, StepLabel, Typography, CircularProgress, Divider, Button, List } from '@material-ui/core';\r\nimport useStyles from './Style';\r\nimport AdressForm from './AdressForm';\r\nimport PaymentForm from './PaymentForm';\r\nimport {Link} from 'react-router-dom';\r\nconst steps = ['Shipping address','Payment details'];\r\nconst CheckOut = ({cart,setCart,setIndexCart}) => {\r\n    \r\n    const [activeStep, setActiveStep] = useState(0);\r\n    const classes = useStyles();\r\n    const [shippingData,setShippingData]=useState({});\r\n  \r\n   const nextStep=()=> setActiveStep((prevActiveStep)=>prevActiveStep+1);\r\n   const backStep=()=> setActiveStep((prevActiveStep)=>prevActiveStep-1);\r\n   const    next =(data)=>{\r\n    setShippingData(data);\r\n    nextStep();\r\n  }\r\n    const Confirmation =()  =>(\r\n        <div>\r\n             <div>\r\n                 <Typography variant='h5'>Thank you for your purchase {shippingData.firstName}</Typography>\r\n             </div>\r\n             <br/>\r\n             <Button component={Link} to='/' type='button' variant='outlined'>Back to Home</Button>\r\n        </div>\r\n    );\r\n    const Form=()=> activeStep === 0\r\n            ? <AdressForm next={next} cart={cart}/>\r\n            : <PaymentForm setIndexCart={setIndexCart} setCart={setCart} cart={cart} nextStep={nextStep} backStep={backStep} shippingData={shippingData}/>\r\n    return (\r\n        <>\r\n            <div className={classes.toolbar} />\r\n            <main className={classes.layout}>\r\n                <Paper className={classes.paper}>\r\n                    <Typography variant='h4' align='center'>CheckOut</Typography>\r\n                    \r\n                    <Stepper activeStep={activeStep} className={classes.stepper} >\r\n                        {steps.map((step) => (\r\n                            <Step key={step}>\r\n                                <StepLabel>{step}</StepLabel>\r\n                            </Step>\r\n                        ))}\r\n                    </Stepper>\r\n                            {activeStep==steps.length ? <Confirmation/> : <Form/>}\r\n                </Paper>\r\n            </main>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default CheckOut\r\n","C:\\Users\\web207\\assignment\\src\\conponents\\Style.js",[],"C:\\Users\\web207\\assignment\\src\\conponents\\AdressForm.jsx",["109","110","111","112","113","114","115"],"import React, { useState, useMemo } from 'react'\r\nimport { InputLabel, MenuItem, Button, Grid, Typography } from '@material-ui/core';\r\nimport { useForm, FormProvider } from 'react-hook-form';\r\nimport FormInput from '../CustomTextField';\r\nimport { CountryDropdown, RegionDropdown } from 'react-country-region-selector';\r\nimport { Link } from 'react-router-dom';\r\nimport useStyles from './Style';\r\nconst AdressForm = ({ cart,next }) => {\r\n    const methods = useForm();\r\n   \r\n    return (\r\n        <>\r\n            <Typography>Shipping Adress</Typography>\r\n            <FormProvider {...methods}>\r\n                <form onSubmit={methods.handleSubmit((data)=>next({ ...data }))}>\r\n                    <Grid container spacing={3}>\r\n                        <FormInput required name='firstName' label='First name' />\r\n                        <FormInput required name='lastName' label='Last name' />\r\n                        <FormInput required name='phone' label='Phone numbers' />\r\n                        <FormInput required name='email' label='Email' />\r\n                        <FormInput required name='adress' label='Adress' />\r\n                        \r\n                    </Grid>\r\n\r\n                    <br/>\r\n                    <div style={{display:'flex',justifyContent:'space-between'}}>\r\n                        <Button component={Link} to='/Cart' color='secondary' variant='outlined'>Back to Cart</Button>\r\n                        <Button  type='submit' color='primary' variant='contained'>Next</Button>\r\n                    </div>\r\n                </form>\r\n            </FormProvider>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default AdressForm\r\n","C:\\Users\\web207\\assignment\\src\\conponents\\PaymentForm.jsx",["116","117","118","119","120","121","122"],"C:\\Users\\web207\\assignment\\src\\CustomTextField.jsx",[],"C:\\Users\\web207\\assignment\\src\\conponents\\EmptyCart.jsx",[],"C:\\Users\\web207\\assignment\\src\\conponents\\Review.jsx",[],"C:\\Users\\web207\\assignment\\src\\conponents\\Footer.js",["123","124","125","126"],"C:\\Users\\web207\\assignment\\src\\conponents\\Login.js",["127","128","129","130","131","132"],"C:\\Users\\web207\\assignment\\src\\CustomLogin.jsx",["133"],"import React from 'react'\r\nimport {TextField,Grid} from '@material-ui/core';\r\nimport {useFormContext,Controller} from 'react-hook-form';\r\nconst FormPassword = ({name,label,required}) => {\r\n    const {control}=useFormContext();\r\n    return (\r\n       <>\r\n          <Controller  \r\n          as={TextField} \r\n          control={control}\r\n          fullWidth\r\n          name={name}\r\n          label={label}\r\n          required={required}\r\n         type='password'\r\n          />\r\n       </>   \r\n    )\r\n}\r\n\r\nexport default FormPassword","C:\\Users\\web207\\assignment\\src\\conponents\\CustomLogin1.jsx",["134"],"import React from 'react'\r\nimport {TextField,Grid} from '@material-ui/core';\r\nimport {useFormContext,Controller} from 'react-hook-form';\r\nconst FormEmail = ({name,label,required}) => {\r\n    const {control}=useFormContext();\r\n    return (\r\n       <>\r\n          <Controller  \r\n          as={TextField} \r\n          control={control}\r\n          fullWidth\r\n          name={name}\r\n          label={label}\r\n          required={required}\r\n        \r\n          />\r\n       </>   \r\n    )\r\n}\r\n\r\nexport default FormEmail","C:\\Users\\web207\\assignment\\src\\conponents\\ProductManageMent.js",["135","136","137"],"import { Table, TableBody, TableHead, TableCell, TableRow, IconButton, Typography, TextField, Button } from '@material-ui/core'\r\nimport React, { useState } from 'react'\r\nimport EditIcon from '@material-ui/icons/Edit';\r\nimport HighlightOffIcon from '@material-ui/icons/HighlightOff';\r\nimport AddCircleIcon from '@material-ui/icons/AddCircle';\r\nimport axios from 'axios';\r\nimport { useForm, FormProvider } from 'react-hook-form';\r\nimport FormInput from '../CustomTextField';\r\n\r\nconst ProductManageMent = ({ product, setProduct }) => {\r\n\r\n    const methods = useForm();\r\n\r\n    const onClickEdit = (value) => {\r\n        const exist = product.find((x) => x.id === value.id);\r\n        if (exist) {\r\n            setProduct(\r\n                product.map((x) => x.id === value.id ? { ...exist, click: exist.click = true } : x)\r\n            );\r\n\r\n        }\r\n    }\r\n\r\n    const [previous, setPrevious] = useState({});\r\n    const [clicked, setClicked] = useState(false);\r\n    const onChangeHandler = (e, row) => {\r\n        if (!previous[row.id]) {\r\n            setPrevious(state => ({ ...state, [row.id]: row }));\r\n        }\r\n        const name = e.target.name;\r\n        const value = e.target.value;\r\n        const { id } = row;\r\n        const newRows = product.map(row => {\r\n            if (row.id === id) {\r\n                return { ...row, [name]: value };\r\n            }\r\n            return row;\r\n        });\r\n        setProduct(newRows);\r\n        const exist = product.find((x) => x.id === value.id);\r\n        if (exist) {\r\n            setProduct(\r\n                product.map((x) => x.id === value.id ? { ...exist, [name]: value } : x)\r\n            );\r\n        }\r\n    };\r\n    const onUpdateProduct = (value) => {\r\n\r\n        let urlUpdate = 'https://600e76d03bb1d100179df304.mockapi.io/products/' + value.id;\r\n        axios({\r\n            method: 'PUT',\r\n            url: urlUpdate,\r\n            data: {\r\n                name: value.name,\r\n                price: value.price,\r\n            },\r\n        }, [])\r\n            .then((response) => {\r\n                console.log(response);\r\n                const exist = product.find((x) => x.id === value.id);\r\n                if (exist) {\r\n                    setProduct(\r\n                        product.map((x) => x.id === value.id ? { ...exist, click: exist.click = false } : x)\r\n                    );\r\n\r\n                }\r\n            })\r\n            .catch((err) => {\r\n                console.log(err);\r\n            })\r\n\r\n    }\r\n    const onDelete = (value) => {\r\n        let url = 'https://600e76d03bb1d100179df304.mockapi.io/products/' + value.id;\r\n        return axios({\r\n            method: 'DELETE',\r\n            url: url,\r\n        })\r\n    }\r\n    const onSubmitHandler = (data) => {\r\n        console.log(data);   \r\n        let urlCreate = 'https://600e76d03bb1d100179df304.mockapi.io/products/';\r\n        axios({\r\n            method:'POST',\r\n            url:urlCreate,\r\n            data:{\r\n                name: data.name,\r\n                price: data.price,\r\n            }\r\n        },[])\r\n        .then((response)=>{\r\n            const {data}=response;\r\n            setProduct([...product,data]);\r\n            window.alert('Product was Added!');\r\n            setClicked(false);\r\n        })\r\n        .catch((err)=>{\r\n            console.log(err);\r\n        })\r\n    }\r\n    const onClickDelete = (value) => {\r\n        const conf = window.confirm('Are you want to delete this product?');\r\n        if (conf === true) {\r\n            const result = onDelete(value);\r\n            result.then((response) => {\r\n                const newRows = product.filter((row) => {\r\n                    if (row.id === value.id) {\r\n                        return false;\r\n                    }\r\n                    return row;\r\n                });\r\n                setProduct(newRows);\r\n            })\r\n                .catch((err) => {\r\n                    console.log(err);\r\n                })\r\n        } else {\r\n            return;\r\n        }\r\n    }\r\n    const onAddProduct = () => {\r\n        setClicked(true);\r\n    }\r\n    const onCancel = () => {\r\n        setClicked(false);\r\n    }\r\n    const formAddProduct = () => clicked === true ? (\r\n        <FormProvider {...methods}>\r\n            <form onSubmit={methods.handleSubmit((data) => onSubmitHandler({ ...data }))}>\r\n                <div  style={{ display: 'flex' }}>\r\n                    <FormInput required name='name' label='Name*' />\r\n                    <FormInput required name='price' label='Price*' />\r\n                \r\n\r\n\r\n                    <Button style={{ margin: '10px' }} type='submit' variant='outlined' >Submit</Button>\r\n                    <Button style={{ margin: '10px' }} variant='outlined' onClick={() => { onCancel() }}>\r\n                        Cancel\r\n         </Button>\r\n\r\n                </div>\r\n\r\n            </form>\r\n        </FormProvider>\r\n    ) : ''\r\n    return (\r\n        <div>\r\n            <div>\r\n                <Typography style={{ margin: '40px 0px', textAlign: 'center', fontWeight: 800 }} color='secondary' variant='h5'>Product Management</Typography>\r\n            </div>\r\n            <div style={{ display: 'flex' }}>\r\n                <IconButton style={{ margin: '10px 20px' }} onClick={() => { onAddProduct() }}>\r\n                    Add New    <AddCircleIcon />\r\n                </IconButton>\r\n\r\n                {formAddProduct()}\r\n            </div>\r\n            <Table>\r\n                <TableHead>\r\n                    <TableRow>\r\n                        <TableCell>Id</TableCell>\r\n                        <TableCell>Name</TableCell>\r\n                        <TableCell>Price</TableCell>\r\n                        <TableCell>Action</TableCell>\r\n                    </TableRow>\r\n                </TableHead>\r\n                <TableBody>\r\n                    {\r\n                        product.map((value) => {\r\n                            return (\r\n                                <TableRow key={value.id}>\r\n                                    <TableCell>{value.id}</TableCell>\r\n                                    <TableCell>{value.click == true ? <TextField onChange={e => onChangeHandler(e, value)} name='name' defaultValue={value.name} /> : value.name}</TableCell>\r\n                                    <TableCell>{value.click == true ? <TextField onChange={e => onChangeHandler(e, value)} name='price' defaultValue={value.price} /> : value.price}</TableCell>\r\n                                    <TableCell>\r\n\r\n                                        <IconButton onClick={() => { onClickEdit(value) }}>\r\n                                            <EditIcon />\r\n                                        </IconButton>\r\n                                        <IconButton onClick={() => { onClickDelete(value) }}>\r\n                                            <HighlightOffIcon />\r\n                                        </IconButton>\r\n                                        {value.click == true ? <IconButton onClick={() => { onUpdateProduct(value) }}>\r\n                                            Save\r\n                                    </IconButton> : ''}\r\n                                    </TableCell>\r\n                                </TableRow>\r\n                            );\r\n                        })\r\n                    }\r\n                </TableBody>\r\n            </Table>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ProductManageMent\r\n","C:\\Users\\web207\\assignment\\src\\conponents\\OrderManagement.js",["138","139","140"],{"ruleId":"141","replacedBy":"142"},{"ruleId":"143","replacedBy":"144"},{"ruleId":"145","severity":1,"message":"146","line":3,"column":8,"nodeType":"147","messageId":"148","endLine":3,"endColumn":17},{"ruleId":"145","severity":1,"message":"149","line":13,"column":8,"nodeType":"147","messageId":"148","endLine":13,"endColumn":16},{"ruleId":"145","severity":1,"message":"150","line":14,"column":8,"nodeType":"147","messageId":"148","endLine":14,"endColumn":12},{"ruleId":"145","severity":1,"message":"151","line":18,"column":8,"nodeType":"147","messageId":"148","endLine":18,"endColumn":14},{"ruleId":"145","severity":1,"message":"152","line":25,"column":8,"nodeType":"147","messageId":"148","endLine":25,"endColumn":16},{"ruleId":"145","severity":1,"message":"153","line":36,"column":3,"nodeType":"147","messageId":"148","endLine":36,"endColumn":13},{"ruleId":"145","severity":1,"message":"154","line":40,"column":10,"nodeType":"147","messageId":"148","endLine":40,"endColumn":26},{"ruleId":"145","severity":1,"message":"155","line":112,"column":9,"nodeType":"147","messageId":"148","endLine":112,"endColumn":16},{"ruleId":"145","severity":1,"message":"156","line":6,"column":17,"nodeType":"147","messageId":"148","endLine":6,"endColumn":26},{"ruleId":"145","severity":1,"message":"157","line":6,"column":38,"nodeType":"147","messageId":"148","endLine":6,"endColumn":48},{"ruleId":"145","severity":1,"message":"158","line":7,"column":16,"nodeType":"147","messageId":"148","endLine":7,"endColumn":26},{"ruleId":"145","severity":1,"message":"159","line":8,"column":10,"nodeType":"147","messageId":"148","endLine":8,"endColumn":14},{"ruleId":"145","severity":1,"message":"160","line":9,"column":33,"nodeType":"147","messageId":"148","endLine":9,"endColumn":38},{"ruleId":"145","severity":1,"message":"161","line":24,"column":10,"nodeType":"147","messageId":"148","endLine":24,"endColumn":14},{"ruleId":"145","severity":1,"message":"162","line":24,"column":16,"nodeType":"147","messageId":"148","endLine":24,"endColumn":23},{"ruleId":"163","severity":1,"message":"164","line":85,"column":53,"nodeType":"165","endLine":85,"endColumn":113},{"ruleId":"145","severity":1,"message":"166","line":1,"column":8,"nodeType":"147","messageId":"148","endLine":1,"endColumn":13},{"ruleId":"145","severity":1,"message":"156","line":3,"column":27,"nodeType":"147","messageId":"148","endLine":3,"endColumn":36},{"ruleId":"145","severity":1,"message":"167","line":4,"column":8,"nodeType":"147","messageId":"148","endLine":4,"endColumn":13},{"ruleId":"145","severity":1,"message":"168","line":6,"column":8,"nodeType":"147","messageId":"148","endLine":6,"endColumn":13},{"ruleId":"145","severity":1,"message":"156","line":1,"column":27,"nodeType":"147","messageId":"148","endLine":1,"endColumn":36},{"ruleId":"145","severity":1,"message":"154","line":2,"column":55,"nodeType":"147","messageId":"148","endLine":2,"endColumn":71},{"ruleId":"145","severity":1,"message":"169","line":2,"column":73,"nodeType":"147","messageId":"148","endLine":2,"endColumn":80},{"ruleId":"145","severity":1,"message":"170","line":2,"column":90,"nodeType":"147","messageId":"148","endLine":2,"endColumn":94},{"ruleId":"171","severity":1,"message":"172","line":46,"column":40,"nodeType":"173","messageId":"174","endLine":46,"endColumn":42},{"ruleId":"145","severity":1,"message":"175","line":1,"column":17,"nodeType":"147","messageId":"148","endLine":1,"endColumn":25},{"ruleId":"145","severity":1,"message":"176","line":1,"column":27,"nodeType":"147","messageId":"148","endLine":1,"endColumn":34},{"ruleId":"145","severity":1,"message":"177","line":2,"column":10,"nodeType":"147","messageId":"148","endLine":2,"endColumn":20},{"ruleId":"145","severity":1,"message":"149","line":2,"column":22,"nodeType":"147","messageId":"148","endLine":2,"endColumn":30},{"ruleId":"145","severity":1,"message":"178","line":5,"column":10,"nodeType":"147","messageId":"148","endLine":5,"endColumn":25},{"ruleId":"145","severity":1,"message":"179","line":5,"column":27,"nodeType":"147","messageId":"148","endLine":5,"endColumn":41},{"ruleId":"145","severity":1,"message":"180","line":7,"column":8,"nodeType":"147","messageId":"148","endLine":7,"endColumn":17},{"ruleId":"145","severity":1,"message":"175","line":1,"column":17,"nodeType":"147","messageId":"148","endLine":1,"endColumn":25},{"ruleId":"145","severity":1,"message":"181","line":2,"column":9,"nodeType":"147","messageId":"148","endLine":2,"endColumn":19},{"ruleId":"145","severity":1,"message":"169","line":2,"column":27,"nodeType":"147","messageId":"148","endLine":2,"endColumn":34},{"ruleId":"145","severity":1,"message":"182","line":3,"column":9,"nodeType":"147","messageId":"148","endLine":3,"endColumn":17},{"ruleId":"145","severity":1,"message":"183","line":3,"column":18,"nodeType":"147","messageId":"148","endLine":3,"endColumn":29},{"ruleId":"145","severity":1,"message":"184","line":3,"column":30,"nodeType":"147","messageId":"148","endLine":3,"endColumn":46},{"ruleId":"145","severity":1,"message":"185","line":4,"column":9,"nodeType":"147","messageId":"148","endLine":4,"endColumn":18},{"ruleId":"145","severity":1,"message":"186","line":2,"column":8,"nodeType":"147","messageId":"148","endLine":2,"endColumn":19},{"ruleId":"145","severity":1,"message":"187","line":4,"column":10,"nodeType":"147","messageId":"148","endLine":4,"endColumn":19},{"ruleId":"145","severity":1,"message":"188","line":7,"column":10,"nodeType":"147","messageId":"148","endLine":7,"endColumn":20},{"ruleId":"145","severity":1,"message":"189","line":8,"column":8,"nodeType":"147","messageId":"148","endLine":8,"endColumn":20},{"ruleId":"145","severity":1,"message":"175","line":1,"column":17,"nodeType":"147","messageId":"148","endLine":1,"endColumn":25},{"ruleId":"145","severity":1,"message":"156","line":1,"column":27,"nodeType":"147","messageId":"148","endLine":1,"endColumn":36},{"ruleId":"145","severity":1,"message":"186","line":5,"column":8,"nodeType":"147","messageId":"148","endLine":5,"endColumn":19},{"ruleId":"145","severity":1,"message":"190","line":6,"column":8,"nodeType":"147","messageId":"148","endLine":6,"endColumn":17},{"ruleId":"145","severity":1,"message":"191","line":17,"column":10,"nodeType":"147","messageId":"148","endLine":17,"endColumn":14},{"ruleId":"145","severity":1,"message":"192","line":18,"column":8,"nodeType":"147","messageId":"148","endLine":18,"endColumn":15},{"ruleId":"145","severity":1,"message":"193","line":2,"column":19,"nodeType":"147","messageId":"148","endLine":2,"endColumn":23},{"ruleId":"145","severity":1,"message":"193","line":2,"column":19,"nodeType":"147","messageId":"148","endLine":2,"endColumn":23},{"ruleId":"171","severity":1,"message":"172","line":173,"column":61,"nodeType":"173","messageId":"174","endLine":173,"endColumn":63},{"ruleId":"171","severity":1,"message":"172","line":174,"column":61,"nodeType":"173","messageId":"174","endLine":174,"endColumn":63},{"ruleId":"171","severity":1,"message":"172","line":183,"column":54,"nodeType":"173","messageId":"174","endLine":183,"endColumn":56},{"ruleId":"145","severity":1,"message":"190","line":1,"column":84,"nodeType":"147","messageId":"148","endLine":1,"endColumn":93},{"ruleId":"145","severity":1,"message":"194","line":11,"column":12,"nodeType":"147","messageId":"148","endLine":11,"endColumn":19},{"ruleId":"145","severity":1,"message":"195","line":11,"column":21,"nodeType":"147","messageId":"148","endLine":11,"endColumn":31},"no-native-reassign",["196"],"no-negated-in-lhs",["197"],"no-unused-vars","'Container' is defined but never used.","Identifier","unusedVar","'MenuItem' is defined but never used.","'Menu' is defined but never used.","'Button' is defined but never used.","'HomeIcon' is defined but never used.","'Browserhis' is defined but never used.","'CircularProgress' is defined but never used.","'history' is assigned a value but never used.","'useEffect' is defined but never used.","'useReducer' is defined but never used.","'useHistory' is defined but never used.","'Card' is defined but never used.","'Email' is defined but never used.","'data' is assigned a value but never used.","'setData' is assigned a value but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'Image' is defined but never used.","'axios' is defined but never used.","'Paper' is defined but never used.","'Divider' is defined but never used.","'List' is defined but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'useState' is defined but never used.","'useMemo' is defined but never used.","'InputLabel' is defined but never used.","'CountryDropdown' is defined but never used.","'RegionDropdown' is defined but never used.","'useStyles' is defined but never used.","'Typography' is defined but never used.","'Elements' is defined but never used.","'CardElement' is defined but never used.","'ElementsConsumer' is defined but never used.","'loadStrip' is defined but never used.","'CssBaseline' is defined but never used.","'emphasize' is defined but never used.","'IconButton' is defined but never used.","'FacebookIcon' is defined but never used.","'TextField' is defined but never used.","'Link' is defined but never used.","'Product' is defined but never used.","'Grid' is defined but never used.","'checked' is assigned a value but never used.","'setChecked' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]